#!/bin/sh

# Set the colours you can use
black='\033[0;30m'
white='\033[0;37m'
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
blue='\033[0;34m'
magenta='\033[0;35m'
cyan='\033[0;36m'

# Resets the style
reset=`tput sgr0`

# Color-echo
# arg $1 = message
# arg $2 = Color
cecho() {
    echo "${2}${1}${reset}"
    return
}

clear_buffer() {
    echo -en \\0033c && tmux clear-history
    return
}

left_line() {
    cecho "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<" $cyan
}

left_cmd() {
    left_line
    cecho "$1: \t\t $2" $cyan
    left_line
    eval $2
}

right_line() {
    cecho ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>" $yellow
}

right_cmd() {
    right_line
    cecho "$1: \t\t $2" $yellow
    right_line
    eval $2
}

merge_line() {
    cecho "==========================================================================================================================" $COLOR
}

merge_cmd() {
    merge_line
    cecho "$1: \t\t $2" $COLOR
    merge_line
    eval $2
}

REV=$1

if [ -z "$REV" ]; then
    REV="HEAD"
fi

BASE=`git merge-base ${REV}^1 ${REV}^2`

if [ ! "${BASE}" ]; then
    cecho "HEAD is not merge commit" $red
    exit 1
fi

clear_buffer
alias git='git --no-pager'

cecho "HEAD: ${REV}" $yellow
cecho "BASE: ${BASE}" $yellow
echo ""

left_cmd "Left Log" "git log -1 ${REV}^1"
CMD="git diff-tree -r ${BASE} ${REV}^1"
left_cmd "Left Changes" "${CMD}"
LEFT_CHANGES=`${CMD}| wc -l`
CMD="git diff-tree -r ${REV}^2 ${REV}"
left_cmd "Left Merges" "${CMD}"
LEFT_MERGES=`${CMD}| wc -l`
left_line

echo ""
right_cmd "Right Log" "git log -1 ${REV}^2"
CMD="git diff-tree -r ${BASE} ${REV}^2"
right_cmd "Right Changes" "${CMD}"
RIGHT_CHANGES=`${CMD}| wc -l`
CMD="git diff-tree -r ${REV}^1 ${REV}"
right_cmd "Right Merges" "${CMD}"
RIGHT_MERGES=`${CMD}| wc -l`
right_line

COLOR=$green
if [ ${LEFT_CHANGES} != ${LEFT_MERGES} ] ; then
    COLOR=$red
fi
if [ ${RIGHT_CHANGES} != ${RIGHT_MERGES} ] ; then
    COLOR=$red
fi

echo ""
merge_cmd "Merge Log" "git log -1 ${REV}"
merge_cmd "Merge Diff" "git show --cc ${REV}"
merge_line

cecho "Left: \t\tChanges: ${LEFT_CHANGES} \t\tMerges: ${LEFT_MERGES}" $COLOR
cecho "Right: \t\tChanges: ${RIGHT_CHANGES} \t\tMerges: ${RIGHT_MERGES}" $COLOR
merge_line

